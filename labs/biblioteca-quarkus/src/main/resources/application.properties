# ============================================
# CONFIGURAÇÃO DO BANCO DE DADOS E HIBERNATE
# ============================================
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

# =======================================================
# CONFIGURAÇÃO DE SEGURANÇA E JAKARTA FACES (VERSÃO FINAL)
# =======================================================

# --- Formulário de Autenticação ---
# Isso permanece igual. Define como o login funciona.
quarkus.http.auth.form.enabled=true
quarkus.http.auth.form.login-page=/login.xhtml
quarkus.http.auth.form.error-page=/login.xhtml?error=true
quarkus.http.auth.form.landing-page=/index.xhtml

# --- Regras de Permissão (NOVA ESTRATÉGIA) ---
# Em vez de proteger TUDO, vamos criar uma política para proteger APENAS as páginas da aplicação.
quarkus.http.auth.permission.pages-protegidas.paths=/index.xhtml,/autor.xhtml,/livro.xhtml,/emprestimo.xhtml
quarkus.http.auth.permission.pages-protegidas.policy=authenticated